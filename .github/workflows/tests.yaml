name: Tests

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '**'

env:
  BEE_VERSION: '1.6.2'

jobs:
  # nodejs:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [14.x, 16.x]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     - name: Auth to Github Package Docker Registry
  #       run: |
  #         echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://docker.pkg.github.com -u ${GITHUB_ACTOR} --password-stdin

  #     - name: Install fdp-play
  #       run: npm install -g @fairdatasociety/fdp-play

  #     - name: Run fdp-play
  #       run: fdp-play start -d --bee-version $BEE_VERSION

  #     ## Try getting the node modules from cache, if failed npm ci
  #     - uses: actions/cache@v2
  #       id: cache-npm
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-node-${{ matrix.node }}-${{ env.cache-name }}-
  #           ${{ runner.OS }}-node-${{ matrix.node }}-

  #     - name: Install npm deps
  #       if: steps.cache-npm.outputs.cache-hit != 'true'
  #       run: npm ci

  #     - name: Run unit and integration tests for node
  #       run: npm run test:node -- --detectOpenHandles

  nodejs-fairos:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Auth to Github Package Docker Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://docker.pkg.github.com -u ${GITHUB_ACTOR} --password-stdin

      - name: Install fdp-play
        run: npm install -g @fairdatasociety/fdp-play

      - name: Run fdp-play
        run: fdp-play start -d --bee-version $BEE_VERSION

      - name: Download fairos
        run: wget https://github.com/asabya/fairOS-dfs/releases/download/v0.9.2/dfs_v0.9.2_linux_amd64
      
      - name: Install fairos
        run: |
          mv dfs_v0.9.2_linux_amd64 dfs
          chmod +x dfs
      - name: Run fairos
        run: |
          export BATCH=$(curl -s 'http://localhost:1635/stamps' | jq '.stamps| .[0] | .batchID') 
          echo $BATCH
          ./dfs server --network play --rpc http://localhost:9545 --beeApi http://localhost:1633 --postageBlockId $BATCH &

      ## Try getting the node modules from cache, if failed npm ci
      - uses: actions/cache@v2
        id: cache-npm
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node }}-${{ env.cache-name }}-
            ${{ runner.OS }}-node-${{ matrix.node }}-

      - name: Install npm deps
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run unit and integration tests for FairOS
        run: npm run test:fairos -- --detectOpenHandles

  # browser:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [16.x]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1

  #     - name: Auth to Github Package Docker Registry
  #       run: |
  #         echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://docker.pkg.github.com -u ${GITHUB_ACTOR} --password-stdin

  #     - name: Install fdp-play
  #       run: npm install -g @fairdatasociety/fdp-play

  #     - name: Run fdp-play
  #       run: fdp-play start -d --bee-version $BEE_VERSION

  #     ## Try getting the node modules from cache, if failed npm ci
  #     - uses: actions/cache@v2
  #       id: cache-npm
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-node-${{ matrix.node }}-${{ env.cache-name }}-
  #           ${{ runner.OS }}-node-${{ matrix.node }}-

  #     - name: Install npm deps
  #       if: steps.cache-npm.outputs.cache-hit != 'true'
  #       run: npm ci

  #     - name: Run browser tests
  #       run: npm run test:browser
